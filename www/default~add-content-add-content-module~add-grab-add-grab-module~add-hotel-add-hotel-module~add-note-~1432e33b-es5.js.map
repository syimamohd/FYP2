{"version":3,"sources":["src/app/services/firebase.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Note} from '../model/Note';\r\nimport {CatHotel} from '../model/CatHotel';\r\nimport {CatSpa} from '../model/CatSpa';\r\nimport {CatVaccine} from '../model/CatVaccine';\r\nimport {CatGrab} from '../model/CatGrab';\r\nimport {CatProduct} from '../model/CatProduct';\r\nimport {BookingHotel} from '../model/BookingHotel';\r\nimport {BookingSpa} from '../model/BookingSpa';\r\nimport {BookingVacc} from '../model/BookingVacc';\r\nimport {BookingGrab} from '../model/BookingGrab';\r\nimport {AngularFirestore, AngularFirestoreCollection, DocumentReference} from '@angular/fire/firestore';\r\nimport {map, take} from 'rxjs/operators';\r\nimport { PurchasedItem } from '../model/PurchasedItem';\r\nimport { Content } from '../model/Content';\r\n\r\n@Injectable({ providedIn: 'root'})\r\n\r\nexport class FirebaseService \r\n{\r\n  private usersCollection: any;\r\n  //hotel & services & product info in db\r\n  private notes: Observable<Note[]>;\r\n  private catHotel: Observable<CatHotel[]>;\r\n  private catSpa: Observable<CatSpa[]>;\r\n  private catVaccine: Observable<CatVaccine[]>;\r\n  private catGrab: Observable<CatGrab[]>;\r\n  private catProduct: Observable<CatProduct[]>;\r\n\r\n  //booking hotel & services table in db\r\n  private hotelBooking: Observable<BookingHotel[]>;\r\n  private spaBooking: Observable<BookingSpa[]>;\r\n  private vaccBooking: Observable<BookingVacc[]>;\r\n  private grabBooking: Observable<BookingGrab[]>;\r\n  private purchasedItem: Observable<PurchasedItem[]>;\r\n  private contentItem: Observable<Content[]>;\r\n\r\n  private noteCollection: AngularFirestoreCollection<Note>;\r\n  private catHotelCollection: AngularFirestoreCollection<CatHotel>;\r\n  private catSpaCollection: AngularFirestoreCollection<CatSpa>;\r\n  private catVaccineCollection: AngularFirestoreCollection<CatVaccine>;\r\n  private catGrabCollection: AngularFirestoreCollection<CatGrab>;\r\n  private catProductCollection: AngularFirestoreCollection<CatProduct>;\r\n\r\n  private catHotelBookingCollection: AngularFirestoreCollection<BookingHotel>;\r\n  private catSpaBookingCollection: AngularFirestoreCollection<BookingSpa>;\r\n  private catVaccBookingCollection: AngularFirestoreCollection<BookingVacc>;\r\n  private catGrabBookingCollection: AngularFirestoreCollection<BookingGrab>;\r\n  private purchasedItemCollection: AngularFirestoreCollection<PurchasedItem>;\r\n  private contentCollection: AngularFirestoreCollection<Content>;\r\n\r\n  constructor(private afs: AngularFirestore) \r\n  {\r\n    this.usersCollection = this.afs.collection<any>('/users');\r\n    //define collection\r\n    this.noteCollection = this.afs.collection<Note>('notes');\r\n    this.catHotelCollection = this.afs.collection<CatHotel>('catHotel');\r\n    this.catSpaCollection = this.afs.collection<CatSpa>('catSpa');\r\n    this.catVaccineCollection = this.afs.collection<CatVaccine>('catVaccine');\r\n    this.catGrabCollection = this.afs.collection<CatGrab>('catGrab');\r\n    this.catProductCollection = this.afs.collection<CatProduct>('catProduct');\r\n\r\n    this.catHotelBookingCollection = this.afs.collection<BookingHotel>('hotelBooking');\r\n    this.catSpaBookingCollection = this.afs.collection<BookingSpa>('spaBooking');\r\n    this.catVaccBookingCollection = this.afs.collection<BookingVacc>('vaccBooking');\r\n    this.catGrabBookingCollection = this.afs.collection<BookingGrab>('grabBooking');\r\n    this.purchasedItemCollection = this.afs.collection<PurchasedItem>('purchasedItem');\r\n    this.contentCollection = this.afs.collection<Content>('contentItem');\r\n\r\n    //content data collection\r\n    this.contentItem = this.contentCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n        );\r\n\r\n    //get collection data\r\n    this.purchasedItem = this.purchasedItemCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n        );\r\n\r\n    //get collection data\r\n    this.notes = this.noteCollection.snapshotChanges().pipe(\r\n        map(actions => \r\n          {\r\n          return actions.map(a => \r\n            {\r\n            const data = a.payload.doc.data();\r\n            const id = a.payload.doc.id;\r\n            return { id, ...data };\r\n            });\r\n          })\r\n    );\r\n\r\n    //get cat hotel collection data\r\n    this.catHotel = this.catHotelCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat spa collection data\r\n    this.catSpa = this.catSpaCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat vaccine collection data\r\n    this.catVaccine = this.catVaccineCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat grab collection data\r\n    this.catGrab = this.catGrabCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat product collection data\r\n    this.catProduct = this.catProductCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat hotel booking collection data\r\n    this.hotelBooking = this.catHotelBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat spa booking collection data\r\n    this.spaBooking = this.catSpaBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    \r\n    //get cat vacc n neuter booking collection data\r\n    this.vaccBooking = this.catVaccBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n     \r\n    //get cat grab booking collection data\r\n    this.grabBooking = this.catGrabBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  //--------------------------------------NOTE TUTORIAL--------------------------------------------------\r\n  //getting all notes\r\n  getNotes(): Observable<Note[]> \r\n  {\r\n    return this.notes;\r\n  }\r\n\r\n  //getting single note\r\n  getNote(id: string): Observable<Note> \r\n  {\r\n    return this.noteCollection.doc<Note>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(note => {\r\n          note.id = id;\r\n          return note;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new note\r\n  addNote(note: Note): Promise<DocumentReference> \r\n  {\r\n    return this.noteCollection.add(note);\r\n  }\r\n\r\n  //update note\r\n  updateNote(note: Note): Promise<void> \r\n  {\r\n    return this.noteCollection.doc(note.id).update({ title: note.title, content: note.content });\r\n  }\r\n\r\n  //delete note\r\n  deleteNote(id: string): Promise<void> \r\n  {\r\n    return this.noteCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT HOTEL--------------------------------------------------\r\n  //getting all catHotel\r\n  getHotels(): Observable<CatHotel[]> \r\n  {\r\n    return this.catHotel;\r\n  }\r\n\r\n  //getting single cat hotel\r\n  getHotel(id: string): Observable<CatHotel> \r\n  {\r\n    return this.catHotelCollection.doc<CatHotel>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(hotel => {\r\n          hotel.id = id;\r\n          return hotel;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new hotel\r\n  addHotel(hotel: CatHotel): Promise<DocumentReference> \r\n  {\r\n    return this.catHotelCollection.add(hotel);\r\n  }\r\n\r\n  //update hotel details\r\n  updateHotel(hotel: CatHotel): Promise<void> \r\n  {\r\n    return this.catHotelCollection.doc(hotel.id).update(hotel);\r\n  }\r\n\r\n  //delete hotel\r\n  deleteHotel(id: string): Promise<void> \r\n  {\r\n    return this.catHotelCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT SPA & GROOMING-----------------------------------------------\r\n  //getting all catSpa\r\n  getSpas(): Observable<CatSpa[]> \r\n  {\r\n    return this.catSpa;\r\n  }\r\n\r\n  //getting single cat spa\r\n  getSpa(id: string): Observable<CatSpa> \r\n  {\r\n    return this.catSpaCollection.doc<CatSpa>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(spa => {\r\n         spa.id = id;\r\n          return spa;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new spa\r\n  addSpa(spa: CatSpa): Promise<DocumentReference> \r\n  {\r\n    return this.catSpaCollection.add(spa);\r\n  }\r\n\r\n  //update spa details\r\n  updateSpa(spa: CatSpa): Promise<void> \r\n  {\r\n    return this.catSpaCollection.doc(spa.id).update(spa);\r\n  }\r\n\r\n  //delete spa\r\n  deleteSpa(id: string): Promise<void> \r\n  {\r\n    return this.catSpaCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT VACCINE & NEUTER-----------------------------------------------\r\n  //getting all catVaccine\r\n  getVaccines(): Observable<CatVaccine[]> \r\n  {\r\n    return this.catVaccine;\r\n  }\r\n\r\n  //getting single cat vaccine\r\n  getVaccine(id: string): Observable<CatVaccine> \r\n  {\r\n    return this.catVaccineCollection.doc<CatVaccine>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(vaccine => {\r\n         vaccine.id = id;\r\n          return vaccine;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new vaccine\r\n  addVaccine(vaccine: CatVaccine): Promise<DocumentReference> \r\n  {\r\n    return this.catVaccineCollection.add(vaccine);\r\n  }\r\n\r\n  //update vaccine details\r\n  updateVaccine(vaccine: CatVaccine): Promise<void> \r\n  {\r\n    return this.catVaccineCollection.doc(vaccine.id).update(vaccine);\r\n  }\r\n\r\n  //delete vaccine\r\n  deleteVaccine(id: string): Promise<void> \r\n  {\r\n    return this.catVaccineCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT GRAB-----------------------------------------------\r\n  //getting all catGrab\r\n  getGrabs(): Observable<CatGrab[]> \r\n  {\r\n    return this.catGrab;\r\n  }\r\n\r\n  //getting single cat grab\r\n  getGrab(id: string): Observable<CatGrab> \r\n  {\r\n    return this.catGrabCollection.doc<CatGrab>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(grab => {\r\n         grab.id = id;\r\n          return grab;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new grab\r\n  addGrab(grab: CatGrab): Promise<DocumentReference> \r\n  {\r\n    return this.catGrabCollection.add(grab);\r\n  }\r\n\r\n  //update grab details\r\n  updateGrab(grab: CatGrab): Promise<void> \r\n  {\r\n    return this.catGrabCollection.doc(grab.id).update(grab);\r\n  }\r\n\r\n  //delete grab\r\n  deleteGrab(id: string): Promise<void> \r\n  {\r\n    return this.catGrabCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT PRODUCT-----------------------------------------------\r\n  //getting all cat product\r\n  getProducts(): Observable<CatProduct[]> \r\n  {\r\n    return this.catProduct;\r\n  }\r\n\r\n  //getting single cat product\r\n  getProduct(id: string): Observable<CatProduct> \r\n  {\r\n    return this.catProductCollection.doc<CatProduct>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(product => {\r\n          product.id = id;\r\n          return product;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new product\r\n  addProduct(product: CatProduct): Promise<DocumentReference> \r\n  {\r\n    return this.catProductCollection.add(product);\r\n  }\r\n\r\n  //update product details\r\n  updateProduct(product: CatProduct): Promise<void> \r\n  {\r\n    return this.catProductCollection.doc(product.id).update(product);\r\n  }\r\n\r\n  //delete product\r\n  deleteProduct(id: string): Promise<void> \r\n  {\r\n    return this.catProductCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT HOTEL BOOKING-----------------------------------------------\r\n  //getting all catHotel booking\r\n  getHotelBookings(): Observable<BookingHotel[]> \r\n  {\r\n    return this.hotelBooking;\r\n  }\r\n\r\n  //getting single cat hotel booking\r\n  getHotelBooking(id: string): Observable<BookingHotel> \r\n  {\r\n    return this.catHotelBookingCollection.doc<BookingHotel>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(bookinghotel => {\r\n          bookinghotel.id = id;\r\n          return bookinghotel;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new hotel booking\r\n  submitBookingHotel(bookinghotel: BookingHotel): Promise<DocumentReference> \r\n  {\r\n    return this.catHotelBookingCollection.add(bookinghotel);\r\n  }\r\n\r\n  // submitBookingHotel(something: { book: {}; uid: string }) \r\n  // {\r\n  //   this.usersCollection.doc(something.uid).update({ booking: something.book, catnem : something.book });\r\n  //   console.log({ something });\r\n   \r\n  // }\r\n  \r\n  //update hotel details\r\n  updateBookingHotel(bookinghotel: BookingHotel): Promise<void> \r\n  {\r\n    return this.catHotelBookingCollection.doc(bookinghotel.id).update(bookinghotel);\r\n  }\r\n\r\n  //delete hotel\r\n  deleteBookingHotel(id: string): Promise<void> \r\n  {\r\n    return this.catHotelBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT SPA & GROOMING BOOKING-----------------------------------------------\r\n  //getting all catSpa booking\r\n  getSpaBookings(): Observable<BookingSpa[]> \r\n  {\r\n    return this.spaBooking;\r\n  }\r\n\r\n  //getting single cat spa booking\r\n  getSpaBooking(id: string): Observable<BookingSpa> \r\n  {\r\n    return this.catSpaBookingCollection.doc<BookingSpa>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(bookingspa => {\r\n         bookingspa.id = id;\r\n          return bookingspa;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new spa booking\r\n  submitBookingSpa(bookingspa: BookingSpa): Promise<DocumentReference> \r\n  {\r\n    return this.catSpaBookingCollection.add(bookingspa);\r\n  }\r\n\r\n  //update spa details\r\n  updateBookingSpa(bookingspa: BookingSpa): Promise<void> \r\n  {\r\n    return this.catSpaBookingCollection.doc(bookingspa.id).update(bookingspa);\r\n  }\r\n\r\n  //delete spa\r\n  deleteBookingSpa(id: string): Promise<void> \r\n  {\r\n    return this.catSpaBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT VACCINE & NEUTER BOOKING---------------------------------------------\r\n  //getting all catVaccine\r\n  getVaccBookings(): Observable<BookingVacc[]> \r\n  {\r\n    return this.vaccBooking;\r\n  }\r\n\r\n  //getting single cat vaccine\r\n  getVaccBooking(id: string): Observable<BookingVacc> \r\n  {\r\n    return this.catVaccBookingCollection.doc<BookingVacc>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(vaccine => {\r\n         vaccine.id = id;\r\n          return vaccine;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new vaccine\r\n  submitBookingVacc(bookingvacc: BookingVacc): Promise<DocumentReference> \r\n  {\r\n    return this.catVaccBookingCollection.add(bookingvacc);\r\n  }\r\n\r\n  //update vaccine details\r\n  updateBookingVacc(bookingvacc: BookingVacc): Promise<void> \r\n  {\r\n    return this.catVaccBookingCollection.doc(bookingvacc.id).update(bookingvacc);\r\n  }\r\n\r\n  //delete vaccine\r\n  deleteBookingVacc(id: string): Promise<void> \r\n  {\r\n    return this.catVaccBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT GRAB BOOKING-----------------------------------------------\r\n  //getting all catGrab\r\n  getGrabBookings(): Observable<BookingGrab[]> \r\n  {\r\n    return this.grabBooking;\r\n  }\r\n\r\n  //getting single cat grab\r\n  getGrabBooking(id: string): Observable<BookingGrab> \r\n  {\r\n    return this.catGrabBookingCollection.doc<BookingGrab>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(grab => {\r\n         grab.id = id;\r\n          return grab;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new grab\r\n  submitBookingGrab(bookinggrab: BookingGrab): Promise<DocumentReference> \r\n  {\r\n    return this.catGrabBookingCollection.add(bookinggrab);\r\n  }\r\n\r\n  //update grab details\r\n  updateBookingGrab(bookinggrab: BookingGrab): Promise<void> \r\n  {\r\n    return this.catGrabBookingCollection.doc(bookinggrab.id).update(bookinggrab);\r\n  }\r\n\r\n  //delete grab\r\n  deleteBookingGrab(id: string): Promise<void> \r\n  {\r\n    return this.catGrabBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------PURCHASED ITEM-----------------------------------------------\r\n  //getting all item\r\n  getPurchasedItems(): Observable<PurchasedItem[]> \r\n  {\r\n    return this.purchasedItem;\r\n  }\r\n\r\n  //getting single item\r\n  getPurchasedItem(id: string): Observable<PurchasedItem> \r\n  {\r\n    return this.purchasedItemCollection.doc<PurchasedItem>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(item => {\r\n         item.id = id;\r\n          return item;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new item\r\n  submitPurchasedItem (item: PurchasedItem): Promise<DocumentReference> \r\n  {\r\n    return this.purchasedItemCollection.add(item);\r\n  }\r\n\r\n  // //update grab details\r\n  // updateBookingGrab(bookinggrab: BookingGrab): Promise<void> \r\n  // {\r\n  //   return this.catGrabBookingCollection.doc(bookinggrab.id).update(\r\n  //   { customerName: bookinggrab.customerName, contactNumber: bookinggrab.contactNumber,\r\n  //     catName: bookinggrab.catName, remark:bookinggrab.remark, date:bookinggrab.date,\r\n  //     time: bookinggrab.time });\r\n  // }\r\n\r\n  // //delete grab\r\n  // deleteBookingGrab(id: string): Promise<void> \r\n  // {\r\n  //   return this.catGrabBookingCollection.doc(id).delete();\r\n  // }\r\n\r\n  //-----------------------------------------DASHBOARD CONTENT-----------------------------------------------\r\n  //getting all item\r\n  getContents(): Observable<Content[]> \r\n  {\r\n    return this.contentItem;\r\n  }\r\n\r\n  //getting single item\r\n  getContent(id: string): Observable<Content> \r\n  {\r\n    return this.contentCollection.doc<Content>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(content => {\r\n         content.id = id;\r\n          return content;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new item\r\n  addContent (content: Content): Promise<DocumentReference> \r\n  {\r\n    return this.contentCollection.add(content);\r\n  }\r\n\r\n  //update content details\r\n  updateContent(content: Content): Promise<void> \r\n  {\r\n    return this.contentCollection.doc(content.id).update(content);\r\n  }\r\n\r\n  //delete hotel\r\n  deleteContent(id: string): Promise<void> \r\n  {\r\n    return this.contentCollection.doc(id).delete();\r\n  }\r\n\r\n\r\n  // submitBookingUser(something:{ book: {}; uid: string }) {\r\n  //   this.usersCollection\r\n  //     .doc(something.uid)\r\n  //     .update({ booking: something.book });\r\n  //   console.log({ something });\r\n  // }\r\n\r\n}"],"sourceRoot":"webpack:///","file":"default~add-content-add-content-module~add-grab-add-grab-module~add-hotel-add-hotel-module~add-note-~1432e33b-es5.js"}