{"version":3,"sources":["./src/app/services/firebase.service.ts"],"names":[],"mappings":"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","file":"default~add-contact-add-contact-module~add-content-add-content-module~add-grab-add-grab-module~add-h~a513e83c-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Note} from '../model/Note';\r\nimport {CatHotel} from '../model/CatHotel';\r\nimport {CatSpa} from '../model/CatSpa';\r\nimport {CatVaccine} from '../model/CatVaccine';\r\nimport {CatGrab} from '../model/CatGrab';\r\nimport {CatProduct} from '../model/CatProduct';\r\nimport {BookingHotel} from '../model/BookingHotel';\r\nimport {BookingSpa} from '../model/BookingSpa';\r\nimport {BookingVacc} from '../model/BookingVacc';\r\nimport {BookingGrab} from '../model/BookingGrab';\r\nimport {AngularFirestore, AngularFirestoreCollection, DocumentReference} from '@angular/fire/firestore';\r\nimport {map, take} from 'rxjs/operators';\r\nimport { PurchasedItem } from '../model/PurchasedItem';\r\nimport { Content } from '../model/Content';\r\n\r\n@Injectable({ providedIn: 'root'})\r\n\r\nexport class FirebaseService \r\n{\r\n  //hotel & services & product info in db\r\n  private notes: Observable<Note[]>;\r\n  private catHotel: Observable<CatHotel[]>;\r\n  private catSpa: Observable<CatSpa[]>;\r\n  private catVaccine: Observable<CatVaccine[]>;\r\n  private catGrab: Observable<CatGrab[]>;\r\n  private catProduct: Observable<CatProduct[]>;\r\n\r\n  //booking hotel & services table in db\r\n  private hotelBooking: Observable<BookingHotel[]>;\r\n  private spaBooking: Observable<BookingSpa[]>;\r\n  private vaccBooking: Observable<BookingVacc[]>;\r\n  private grabBooking: Observable<BookingGrab[]>;\r\n  private purchasedItem: Observable<PurchasedItem[]>;\r\n  private contentItem: Observable<Content[]>;\r\n\r\n  private noteCollection: AngularFirestoreCollection<Note>;\r\n  private catHotelCollection: AngularFirestoreCollection<CatHotel>;\r\n  private catSpaCollection: AngularFirestoreCollection<CatSpa>;\r\n  private catVaccineCollection: AngularFirestoreCollection<CatVaccine>;\r\n  private catGrabCollection: AngularFirestoreCollection<CatGrab>;\r\n  private catProductCollection: AngularFirestoreCollection<CatProduct>;\r\n\r\n  private catHotelBookingCollection: AngularFirestoreCollection<BookingHotel>;\r\n  private catSpaBookingCollection: AngularFirestoreCollection<BookingSpa>;\r\n  private catVaccBookingCollection: AngularFirestoreCollection<BookingVacc>;\r\n  private catGrabBookingCollection: AngularFirestoreCollection<BookingGrab>;\r\n  private purchasedItemCollection: AngularFirestoreCollection<PurchasedItem>;\r\n  private contentCollection: AngularFirestoreCollection<Content>;\r\n\r\n  constructor(private afs: AngularFirestore) \r\n  {\r\n    //define collection\r\n    this.noteCollection = this.afs.collection<Note>('notes');\r\n    this.catHotelCollection = this.afs.collection<CatHotel>('catHotel');\r\n    this.catSpaCollection = this.afs.collection<CatSpa>('catSpa');\r\n    this.catVaccineCollection = this.afs.collection<CatVaccine>('catVaccine');\r\n    this.catGrabCollection = this.afs.collection<CatGrab>('catGrab');\r\n    this.catProductCollection = this.afs.collection<CatProduct>('catProduct');\r\n\r\n    this.catHotelBookingCollection = this.afs.collection<BookingHotel>('hotelBooking');\r\n    this.catSpaBookingCollection = this.afs.collection<BookingSpa>('spaBooking');\r\n    this.catVaccBookingCollection = this.afs.collection<BookingVacc>('vaccBooking');\r\n    this.catGrabBookingCollection = this.afs.collection<BookingGrab>('grabBooking');\r\n    this.purchasedItemCollection = this.afs.collection<PurchasedItem>('purchasedItem');\r\n    this.contentCollection = this.afs.collection<Content>('contentItem');\r\n\r\n    //content data collection\r\n    this.contentItem = this.contentCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n        );\r\n\r\n    //get collection data\r\n    this.purchasedItem = this.purchasedItemCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n        );\r\n\r\n    //get collection data\r\n    this.notes = this.noteCollection.snapshotChanges().pipe(\r\n        map(actions => \r\n          {\r\n          return actions.map(a => \r\n            {\r\n            const data = a.payload.doc.data();\r\n            const id = a.payload.doc.id;\r\n            return { id, ...data };\r\n            });\r\n          })\r\n    );\r\n\r\n    //get cat hotel collection data\r\n    this.catHotel = this.catHotelCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat spa collection data\r\n    this.catSpa = this.catSpaCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat vaccine collection data\r\n    this.catVaccine = this.catVaccineCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat grab collection data\r\n    this.catGrab = this.catGrabCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat product collection data\r\n    this.catProduct = this.catProductCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat hotel booking collection data\r\n    this.hotelBooking = this.catHotelBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat spa booking collection data\r\n    this.spaBooking = this.catSpaBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    \r\n    //get cat vacc n neuter booking collection data\r\n    this.vaccBooking = this.catVaccBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n     \r\n    //get cat grab booking collection data\r\n    this.grabBooking = this.catGrabBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  //--------------------------------------NOTE TUTORIAL--------------------------------------------------\r\n  //getting all notes\r\n  getNotes(): Observable<Note[]> \r\n  {\r\n    return this.notes;\r\n  }\r\n\r\n  //getting single note\r\n  getNote(id: string): Observable<Note> \r\n  {\r\n    return this.noteCollection.doc<Note>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(note => {\r\n          note.id = id;\r\n          return note;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new note\r\n  addNote(note: Note): Promise<DocumentReference> \r\n  {\r\n    return this.noteCollection.add(note);\r\n  }\r\n\r\n  //update note\r\n  updateNote(note: Note): Promise<void> \r\n  {\r\n    return this.noteCollection.doc(note.id).update({ title: note.title, content: note.content });\r\n  }\r\n\r\n  //delete note\r\n  deleteNote(id: string): Promise<void> \r\n  {\r\n    return this.noteCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT HOTEL--------------------------------------------------\r\n  //getting all catHotel\r\n  getHotels(): Observable<CatHotel[]> \r\n  {\r\n    return this.catHotel;\r\n  }\r\n\r\n  //getting single cat hotel\r\n  getHotel(id: string): Observable<CatHotel> \r\n  {\r\n    return this.catHotelCollection.doc<CatHotel>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(hotel => {\r\n          hotel.id = id;\r\n          return hotel;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new hotel\r\n  addHotel(hotel: CatHotel): Promise<DocumentReference> \r\n  {\r\n    return this.catHotelCollection.add(hotel);\r\n  }\r\n\r\n  //update hotel details\r\n  updateHotel(hotel: CatHotel): Promise<void> \r\n  {\r\n    return this.catHotelCollection.doc(hotel.id).update(hotel);\r\n  }\r\n\r\n  //delete hotel\r\n  deleteHotel(id: string): Promise<void> \r\n  {\r\n    return this.catHotelCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT SPA & GROOMING-----------------------------------------------\r\n  //getting all catSpa\r\n  getSpas(): Observable<CatSpa[]> \r\n  {\r\n    return this.catSpa;\r\n  }\r\n\r\n  //getting single cat spa\r\n  getSpa(id: string): Observable<CatSpa> \r\n  {\r\n    return this.catSpaCollection.doc<CatSpa>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(spa => {\r\n         spa.id = id;\r\n          return spa;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new spa\r\n  addSpa(spa: CatSpa): Promise<DocumentReference> \r\n  {\r\n    return this.catSpaCollection.add(spa);\r\n  }\r\n\r\n  //update spa details\r\n  updateSpa(spa: CatSpa): Promise<void> \r\n  {\r\n    return this.catSpaCollection.doc(spa.id).update({ spaName: spa.spaName, spaDetails: spa.spaDetails, spaPrice: spa.spaPrice });\r\n  }\r\n\r\n  //delete spa\r\n  deleteSpa(id: string): Promise<void> \r\n  {\r\n    return this.catSpaCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT VACCINE & NEUTER-----------------------------------------------\r\n  //getting all catVaccine\r\n  getVaccines(): Observable<CatVaccine[]> \r\n  {\r\n    return this.catVaccine;\r\n  }\r\n\r\n  //getting single cat vaccine\r\n  getVaccine(id: string): Observable<CatVaccine> \r\n  {\r\n    return this.catVaccineCollection.doc<CatVaccine>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(vaccine => {\r\n         vaccine.id = id;\r\n          return vaccine;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new vaccine\r\n  addVaccine(vaccine: CatVaccine): Promise<DocumentReference> \r\n  {\r\n    return this.catVaccineCollection.add(vaccine);\r\n  }\r\n\r\n  //update vaccine details\r\n  updateVaccine(vaccine: CatVaccine): Promise<void> \r\n  {\r\n    return this.catVaccineCollection.doc(vaccine.id).update({ vaccineName: vaccine.vaccineName, vaccineDetails: vaccine.vaccineDetails, vaccinePrice: vaccine.vaccinePrice });\r\n  }\r\n\r\n  //delete vaccine\r\n  deleteVaccine(id: string): Promise<void> \r\n  {\r\n    return this.catVaccineCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT GRAB-----------------------------------------------\r\n  //getting all catGrab\r\n  getGrabs(): Observable<CatGrab[]> \r\n  {\r\n    return this.catGrab;\r\n  }\r\n\r\n  //getting single cat grab\r\n  getGrab(id: string): Observable<CatGrab> \r\n  {\r\n    return this.catGrabCollection.doc<CatGrab>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(grab => {\r\n         grab.id = id;\r\n          return grab;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new grab\r\n  addGrab(grab: CatGrab): Promise<DocumentReference> \r\n  {\r\n    return this.catGrabCollection.add(grab);\r\n  }\r\n\r\n  //update grab details\r\n  updateGrab(grab: CatGrab): Promise<void> \r\n  {\r\n    return this.catGrabCollection.doc(grab.id).update({ grabName: grab.grabName, grabDetails: grab.grabDetails, grabPrice: grab.grabPrice });\r\n  }\r\n\r\n  //delete grab\r\n  deleteGrab(id: string): Promise<void> \r\n  {\r\n    return this.catGrabCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT PRODUCT-----------------------------------------------\r\n  //getting all cat product\r\n  getProducts(): Observable<CatProduct[]> \r\n  {\r\n    return this.catProduct;\r\n  }\r\n\r\n  //getting single cat product\r\n  getProduct(id: string): Observable<CatProduct> \r\n  {\r\n    return this.catProductCollection.doc<CatProduct>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(product => {\r\n          product.id = id;\r\n          return product;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new product\r\n  addProduct(product: CatProduct): Promise<DocumentReference> \r\n  {\r\n    return this.catProductCollection.add(product);\r\n  }\r\n\r\n  //update product details\r\n  updateProduct(product: CatProduct): Promise<void> \r\n  {\r\n    return this.catProductCollection.doc(product.id).update({ productName: product.productName, productDetails: product.productDetails, productPrice: product.productPrice });\r\n  }\r\n\r\n  //delete product\r\n  deleteProduct(id: string): Promise<void> \r\n  {\r\n    return this.catProductCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT HOTEL BOOKING------------------------------------------------\r\n  //getting all catHotel booking\r\n  getHotelBookings(): Observable<BookingHotel[]> \r\n  {\r\n    return this.hotelBooking;\r\n  }\r\n\r\n  //getting single cat hotel booking\r\n  getHotelBooking(id: string): Observable<BookingHotel> \r\n  {\r\n    return this.catHotelBookingCollection.doc<BookingHotel>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(bookinghotel => {\r\n          bookinghotel.id = id;\r\n          return bookinghotel;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new hotel booking\r\n  submitBookingHotel(bookinghotel: BookingHotel): Promise<DocumentReference> \r\n  {\r\n    return this.catHotelBookingCollection.add(bookinghotel);\r\n  }\r\n\r\n  //update hotel details\r\n  updateBookingHotel(bookinghotel: BookingHotel): Promise<void> \r\n  {\r\n    return this.catHotelBookingCollection.doc(bookinghotel.id).update\r\n    ({ \r\n      customerName: bookinghotel.customerName, contactNumber: bookinghotel.contactNumber,\r\n      catName: bookinghotel.catName, remark: bookinghotel.remark, checkInDate: bookinghotel.checkInDate,\r\n      checkOutDate: bookinghotel.checkOutDate, timeIn: bookinghotel.timeIn,\r\n      timeOut: bookinghotel.timeOut \r\n    });\r\n  }\r\n\r\n  //delete hotel\r\n  deleteBookingHotel(id: string): Promise<void> \r\n  {\r\n    return this.catHotelBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT SPA & GROOMING BOOKING-----------------------------------------------\r\n  //getting all catSpa booking\r\n  getSpaBookings(): Observable<BookingSpa[]> \r\n  {\r\n    return this.spaBooking;\r\n  }\r\n\r\n  //getting single cat spa booking\r\n  getSpaBooking(id: string): Observable<BookingSpa> \r\n  {\r\n    return this.catSpaBookingCollection.doc<BookingSpa>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(bookingspa => {\r\n         bookingspa.id = id;\r\n          return bookingspa;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new spa booking\r\n  submitBookingSpa(bookingspa: BookingSpa): Promise<DocumentReference> \r\n  {\r\n    return this.catSpaBookingCollection.add(bookingspa);\r\n  }\r\n\r\n  //update spa details\r\n  updateBookingSpa(bookingspa: BookingSpa): Promise<void> \r\n  {\r\n    return this.catSpaBookingCollection.doc(bookingspa.id).update(\r\n      { customerName: bookingspa.customerName, contactNumber: bookingspa.contactNumber,\r\n        catName: bookingspa.catName, remark: bookingspa.remark, date: bookingspa.date,\r\n        time: bookingspa.time \r\n      });\r\n  }\r\n\r\n  //delete spa\r\n  deleteBookingSpa(id: string): Promise<void> \r\n  {\r\n    return this.catSpaBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT VACCINE & NEUTER BOOKING---------------------------------------------\r\n  //getting all catVaccine\r\n  getVaccBookings(): Observable<BookingVacc[]> \r\n  {\r\n    return this.vaccBooking;\r\n  }\r\n\r\n  //getting single cat vaccine\r\n  getVaccBooking(id: string): Observable<BookingVacc> \r\n  {\r\n    return this.catVaccBookingCollection.doc<BookingVacc>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(vaccine => {\r\n         vaccine.id = id;\r\n          return vaccine;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new vaccine\r\n  submitBookingVacc(bookingvacc: BookingVacc): Promise<DocumentReference> \r\n  {\r\n    return this.catVaccBookingCollection.add(bookingvacc);\r\n  }\r\n\r\n  //update vaccine details\r\n  updateBookingVacc(bookingvacc: BookingVacc): Promise<void> \r\n  {\r\n    return this.catVaccBookingCollection.doc(bookingvacc.id).update(\r\n      { customerName: bookingvacc.customerName, contactNumber: bookingvacc.contactNumber,\r\n        catName: bookingvacc.catName, remark:bookingvacc.remark, date: bookingvacc.date,\r\n        time: bookingvacc.time  });\r\n  }\r\n\r\n  //delete vaccine\r\n  deleteBookingVacc(id: string): Promise<void> \r\n  {\r\n    return this.catVaccBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT GRAB BOOKING-----------------------------------------------\r\n  //getting all catGrab\r\n  getGrabBookings(): Observable<BookingGrab[]> \r\n  {\r\n    return this.grabBooking;\r\n  }\r\n\r\n  //getting single cat grab\r\n  getGrabBooking(id: string): Observable<BookingGrab> \r\n  {\r\n    return this.catGrabBookingCollection.doc<BookingGrab>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(grab => {\r\n         grab.id = id;\r\n          return grab;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new grab\r\n  submitBookingGrab(bookinggrab: BookingGrab): Promise<DocumentReference> \r\n  {\r\n    return this.catGrabBookingCollection.add(bookinggrab);\r\n  }\r\n\r\n  //update grab details\r\n  updateBookingGrab(bookinggrab: BookingGrab): Promise<void> \r\n  {\r\n    return this.catGrabBookingCollection.doc(bookinggrab.id).update(\r\n    { customerName: bookinggrab.customerName, contactNumber: bookinggrab.contactNumber,\r\n      catName: bookinggrab.catName, remark:bookinggrab.remark, date:bookinggrab.date,\r\n      time: bookinggrab.time });\r\n  }\r\n\r\n  //delete grab\r\n  deleteBookingGrab(id: string): Promise<void> \r\n  {\r\n    return this.catGrabBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------PURCHASED ITEM-----------------------------------------------\r\n  //getting all item\r\n  getPurchasedItems(): Observable<PurchasedItem[]> \r\n  {\r\n    return this.purchasedItem;\r\n  }\r\n\r\n  //getting single item\r\n  getPurchasedItem(id: string): Observable<PurchasedItem> \r\n  {\r\n    return this.purchasedItemCollection.doc<PurchasedItem>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(item => {\r\n         item.id = id;\r\n          return item;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new item\r\n  submitPurchasedItem (item: PurchasedItem): Promise<DocumentReference> \r\n  {\r\n    return this.purchasedItemCollection.add(item);\r\n  }\r\n\r\n  // //update grab details\r\n  // updateBookingGrab(bookinggrab: BookingGrab): Promise<void> \r\n  // {\r\n  //   return this.catGrabBookingCollection.doc(bookinggrab.id).update(\r\n  //   { customerName: bookinggrab.customerName, contactNumber: bookinggrab.contactNumber,\r\n  //     catName: bookinggrab.catName, remark:bookinggrab.remark, date:bookinggrab.date,\r\n  //     time: bookinggrab.time });\r\n  // }\r\n\r\n  // //delete grab\r\n  // deleteBookingGrab(id: string): Promise<void> \r\n  // {\r\n  //   return this.catGrabBookingCollection.doc(id).delete();\r\n  // }\r\n\r\n  //-----------------------------------------DASHBOARD CONTENT-----------------------------------------------\r\n  //getting all item\r\n  getContents(): Observable<Content[]> \r\n  {\r\n    return this.contentItem;\r\n  }\r\n\r\n  //getting single item\r\n  getContent(id: string): Observable<Content> \r\n  {\r\n    return this.contentCollection.doc<Content>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(content => {\r\n         content.id = id;\r\n          return content;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new item\r\n  addContent (content: Content): Promise<DocumentReference> \r\n  {\r\n    return this.contentCollection.add(content);\r\n  }\r\n\r\n\r\n  //update content details\r\n  updateContent(content: Content): Promise<void> \r\n  {\r\n    return this.contentCollection.doc(content.id).update(content);\r\n  }\r\n\r\n  //delete hotel\r\n  deleteContent(id: string): Promise<void> \r\n  {\r\n    return this.contentCollection.doc(id).delete();\r\n  }\r\n\r\n}"],"sourceRoot":"webpack:///"}