{"version":3,"sources":["src/app/services/firebase.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Note} from '../model/Note';\r\nimport {CatHotel} from '../model/CatHotel';\r\nimport {CatSpa} from '../model/CatSpa';\r\nimport {CatVaccine} from '../model/CatVaccine';\r\nimport {CatGrab} from '../model/CatGrab';\r\nimport {CatProduct} from '../model/CatProduct';\r\nimport {BookingHotel} from '../model/BookingHotel';\r\nimport {BookingSpa} from '../model/BookingSpa';\r\nimport {BookingVacc} from '../model/BookingVacc';\r\nimport {BookingGrab} from '../model/BookingGrab';\r\nimport {AngularFirestore, AngularFirestoreCollection, DocumentReference} from '@angular/fire/firestore';\r\nimport {map, take} from 'rxjs/operators';\r\nimport { PurchasedItem } from '../model/PurchasedItem';\r\nimport { Content } from '../model/Content';\r\n\r\n@Injectable({ providedIn: 'root'})\r\n\r\nexport class FirebaseService \r\n{\r\n  //hotel & services & product info in db\r\n  private notes: Observable<Note[]>;\r\n  private catHotel: Observable<CatHotel[]>;\r\n  private catSpa: Observable<CatSpa[]>;\r\n  private catVaccine: Observable<CatVaccine[]>;\r\n  private catGrab: Observable<CatGrab[]>;\r\n  private catProduct: Observable<CatProduct[]>;\r\n\r\n  //booking hotel & services table in db\r\n  private hotelBooking: Observable<BookingHotel[]>;\r\n  private spaBooking: Observable<BookingSpa[]>;\r\n  private vaccBooking: Observable<BookingVacc[]>;\r\n  private grabBooking: Observable<BookingGrab[]>;\r\n  private purchasedItem: Observable<PurchasedItem[]>;\r\n  private contentItem: Observable<Content[]>;\r\n\r\n  private noteCollection: AngularFirestoreCollection<Note>;\r\n  private catHotelCollection: AngularFirestoreCollection<CatHotel>;\r\n  private catSpaCollection: AngularFirestoreCollection<CatSpa>;\r\n  private catVaccineCollection: AngularFirestoreCollection<CatVaccine>;\r\n  private catGrabCollection: AngularFirestoreCollection<CatGrab>;\r\n  private catProductCollection: AngularFirestoreCollection<CatProduct>;\r\n\r\n  private catHotelBookingCollection: AngularFirestoreCollection<BookingHotel>;\r\n  private catSpaBookingCollection: AngularFirestoreCollection<BookingSpa>;\r\n  private catVaccBookingCollection: AngularFirestoreCollection<BookingVacc>;\r\n  private catGrabBookingCollection: AngularFirestoreCollection<BookingGrab>;\r\n  private purchasedItemCollection: AngularFirestoreCollection<PurchasedItem>;\r\n  private contentCollection: AngularFirestoreCollection<Content>;\r\n\r\n  constructor(private afs: AngularFirestore) \r\n  {\r\n    //define collection\r\n    this.noteCollection = this.afs.collection<Note>('notes');\r\n    this.catHotelCollection = this.afs.collection<CatHotel>('catHotel');\r\n    this.catSpaCollection = this.afs.collection<CatSpa>('catSpa');\r\n    this.catVaccineCollection = this.afs.collection<CatVaccine>('catVaccine');\r\n    this.catGrabCollection = this.afs.collection<CatGrab>('catGrab');\r\n    this.catProductCollection = this.afs.collection<CatProduct>('catProduct');\r\n\r\n    this.catHotelBookingCollection = this.afs.collection<BookingHotel>('hotelBooking');\r\n    this.catSpaBookingCollection = this.afs.collection<BookingSpa>('spaBooking');\r\n    this.catVaccBookingCollection = this.afs.collection<BookingVacc>('vaccBooking');\r\n    this.catGrabBookingCollection = this.afs.collection<BookingGrab>('grabBooking');\r\n    this.purchasedItemCollection = this.afs.collection<PurchasedItem>('purchasedItem');\r\n    this.contentCollection = this.afs.collection<Content>('contentItem');\r\n\r\n    //content data collection\r\n    this.contentItem = this.contentCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n        );\r\n\r\n    //get collection data\r\n    this.purchasedItem = this.purchasedItemCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n        );\r\n\r\n    //get collection data\r\n    this.notes = this.noteCollection.snapshotChanges().pipe(\r\n        map(actions => \r\n          {\r\n          return actions.map(a => \r\n            {\r\n            const data = a.payload.doc.data();\r\n            const id = a.payload.doc.id;\r\n            return { id, ...data };\r\n            });\r\n          })\r\n    );\r\n\r\n    //get cat hotel collection data\r\n    this.catHotel = this.catHotelCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat spa collection data\r\n    this.catSpa = this.catSpaCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat vaccine collection data\r\n    this.catVaccine = this.catVaccineCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat grab collection data\r\n    this.catGrab = this.catGrabCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat product collection data\r\n    this.catProduct = this.catProductCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat hotel booking collection data\r\n    this.hotelBooking = this.catHotelBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    //get cat spa booking collection data\r\n    this.spaBooking = this.catSpaBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n    \r\n    //get cat vacc n neuter booking collection data\r\n    this.vaccBooking = this.catVaccBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n\r\n     \r\n    //get cat grab booking collection data\r\n    this.grabBooking = this.catGrabBookingCollection.snapshotChanges().pipe(\r\n      map(actions => \r\n        {\r\n        return actions.map(a => \r\n          {\r\n          const data = a.payload.doc.data();\r\n          const id = a.payload.doc.id;\r\n          return { id, ...data };\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  //--------------------------------------NOTE TUTORIAL--------------------------------------------------\r\n  //getting all notes\r\n  getNotes(): Observable<Note[]> \r\n  {\r\n    return this.notes;\r\n  }\r\n\r\n  //getting single note\r\n  getNote(id: string): Observable<Note> \r\n  {\r\n    return this.noteCollection.doc<Note>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(note => {\r\n          note.id = id;\r\n          return note;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new note\r\n  addNote(note: Note): Promise<DocumentReference> \r\n  {\r\n    return this.noteCollection.add(note);\r\n  }\r\n\r\n  //update note\r\n  updateNote(note: Note): Promise<void> \r\n  {\r\n    return this.noteCollection.doc(note.id).update({ title: note.title, content: note.content });\r\n  }\r\n\r\n  //delete note\r\n  deleteNote(id: string): Promise<void> \r\n  {\r\n    return this.noteCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT HOTEL--------------------------------------------------\r\n  //getting all catHotel\r\n  getHotels(): Observable<CatHotel[]> \r\n  {\r\n    return this.catHotel;\r\n  }\r\n\r\n  //getting single cat hotel\r\n  getHotel(id: string): Observable<CatHotel> \r\n  {\r\n    return this.catHotelCollection.doc<CatHotel>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(hotel => {\r\n          hotel.id = id;\r\n          return hotel;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new hotel\r\n  addHotel(hotel: CatHotel): Promise<DocumentReference> \r\n  {\r\n    return this.catHotelCollection.add(hotel);\r\n  }\r\n\r\n  //update hotel details\r\n  updateHotel(hotel: CatHotel): Promise<void> \r\n  {\r\n    return this.catHotelCollection.doc(hotel.id).update(hotel);\r\n  }\r\n\r\n  //delete hotel\r\n  deleteHotel(id: string): Promise<void> \r\n  {\r\n    return this.catHotelCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT SPA & GROOMING-----------------------------------------------\r\n  //getting all catSpa\r\n  getSpas(): Observable<CatSpa[]> \r\n  {\r\n    return this.catSpa;\r\n  }\r\n\r\n  //getting single cat spa\r\n  getSpa(id: string): Observable<CatSpa> \r\n  {\r\n    return this.catSpaCollection.doc<CatSpa>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(spa => {\r\n         spa.id = id;\r\n          return spa;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new spa\r\n  addSpa(spa: CatSpa): Promise<DocumentReference> \r\n  {\r\n    return this.catSpaCollection.add(spa);\r\n  }\r\n\r\n  //update spa details\r\n  updateSpa(spa: CatSpa): Promise<void> \r\n  {\r\n    return this.catSpaCollection.doc(spa.id).update({ spaName: spa.spaName, spaDetails: spa.spaDetails, spaPrice: spa.spaPrice });\r\n  }\r\n\r\n  //delete spa\r\n  deleteSpa(id: string): Promise<void> \r\n  {\r\n    return this.catSpaCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT VACCINE & NEUTER-----------------------------------------------\r\n  //getting all catVaccine\r\n  getVaccines(): Observable<CatVaccine[]> \r\n  {\r\n    return this.catVaccine;\r\n  }\r\n\r\n  //getting single cat vaccine\r\n  getVaccine(id: string): Observable<CatVaccine> \r\n  {\r\n    return this.catVaccineCollection.doc<CatVaccine>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(vaccine => {\r\n         vaccine.id = id;\r\n          return vaccine;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new vaccine\r\n  addVaccine(vaccine: CatVaccine): Promise<DocumentReference> \r\n  {\r\n    return this.catVaccineCollection.add(vaccine);\r\n  }\r\n\r\n  //update vaccine details\r\n  updateVaccine(vaccine: CatVaccine): Promise<void> \r\n  {\r\n    return this.catVaccineCollection.doc(vaccine.id).update({ vaccineName: vaccine.vaccineName, vaccineDetails: vaccine.vaccineDetails, vaccinePrice: vaccine.vaccinePrice });\r\n  }\r\n\r\n  //delete vaccine\r\n  deleteVaccine(id: string): Promise<void> \r\n  {\r\n    return this.catVaccineCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT GRAB-----------------------------------------------\r\n  //getting all catGrab\r\n  getGrabs(): Observable<CatGrab[]> \r\n  {\r\n    return this.catGrab;\r\n  }\r\n\r\n  //getting single cat grab\r\n  getGrab(id: string): Observable<CatGrab> \r\n  {\r\n    return this.catGrabCollection.doc<CatGrab>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(grab => {\r\n         grab.id = id;\r\n          return grab;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new grab\r\n  addGrab(grab: CatGrab): Promise<DocumentReference> \r\n  {\r\n    return this.catGrabCollection.add(grab);\r\n  }\r\n\r\n  //update grab details\r\n  updateGrab(grab: CatGrab): Promise<void> \r\n  {\r\n    return this.catGrabCollection.doc(grab.id).update({ grabName: grab.grabName, grabDetails: grab.grabDetails, grabPrice: grab.grabPrice });\r\n  }\r\n\r\n  //delete grab\r\n  deleteGrab(id: string): Promise<void> \r\n  {\r\n    return this.catGrabCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT PRODUCT-----------------------------------------------\r\n  //getting all cat product\r\n  getProducts(): Observable<CatProduct[]> \r\n  {\r\n    return this.catProduct;\r\n  }\r\n\r\n  //getting single cat product\r\n  getProduct(id: string): Observable<CatProduct> \r\n  {\r\n    return this.catProductCollection.doc<CatProduct>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(product => {\r\n          product.id = id;\r\n          return product;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new product\r\n  addProduct(product: CatProduct): Promise<DocumentReference> \r\n  {\r\n    return this.catProductCollection.add(product);\r\n  }\r\n\r\n  //update product details\r\n  updateProduct(product: CatProduct): Promise<void> \r\n  {\r\n    return this.catProductCollection.doc(product.id).update({ productName: product.productName, productDetails: product.productDetails, productPrice: product.productPrice });\r\n  }\r\n\r\n  //delete product\r\n  deleteProduct(id: string): Promise<void> \r\n  {\r\n    return this.catProductCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT HOTEL BOOKING------------------------------------------------\r\n  //getting all catHotel booking\r\n  getHotelBookings(): Observable<BookingHotel[]> \r\n  {\r\n    return this.hotelBooking;\r\n  }\r\n\r\n  //getting single cat hotel booking\r\n  getHotelBooking(id: string): Observable<BookingHotel> \r\n  {\r\n    return this.catHotelBookingCollection.doc<BookingHotel>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(bookinghotel => {\r\n          bookinghotel.id = id;\r\n          return bookinghotel;\r\n        })\r\n    );\r\n  }\r\n\r\n  //create new hotel booking\r\n  submitBookingHotel(bookinghotel: BookingHotel): Promise<DocumentReference> \r\n  {\r\n    return this.catHotelBookingCollection.add(bookinghotel);\r\n  }\r\n\r\n  //update hotel details\r\n  updateBookingHotel(bookinghotel: BookingHotel): Promise<void> \r\n  {\r\n    return this.catHotelBookingCollection.doc(bookinghotel.id).update\r\n    ({ \r\n      customerName: bookinghotel.customerName, contactNumber: bookinghotel.contactNumber,\r\n      catName: bookinghotel.catName, remark: bookinghotel.remark, checkInDate: bookinghotel.checkInDate,\r\n      checkOutDate: bookinghotel.checkOutDate, timeIn: bookinghotel.timeIn,\r\n      timeOut: bookinghotel.timeOut \r\n    });\r\n  }\r\n\r\n  //delete hotel\r\n  deleteBookingHotel(id: string): Promise<void> \r\n  {\r\n    return this.catHotelBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT SPA & GROOMING BOOKING-----------------------------------------------\r\n  //getting all catSpa booking\r\n  getSpaBookings(): Observable<BookingSpa[]> \r\n  {\r\n    return this.spaBooking;\r\n  }\r\n\r\n  //getting single cat spa booking\r\n  getSpaBooking(id: string): Observable<BookingSpa> \r\n  {\r\n    return this.catSpaBookingCollection.doc<BookingSpa>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(bookingspa => {\r\n         bookingspa.id = id;\r\n          return bookingspa;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new spa booking\r\n  submitBookingSpa(bookingspa: BookingSpa): Promise<DocumentReference> \r\n  {\r\n    return this.catSpaBookingCollection.add(bookingspa);\r\n  }\r\n\r\n  //update spa details\r\n  updateBookingSpa(bookingspa: BookingSpa): Promise<void> \r\n  {\r\n    return this.catSpaBookingCollection.doc(bookingspa.id).update(\r\n      { customerName: bookingspa.customerName, contactNumber: bookingspa.contactNumber,\r\n        catName: bookingspa.catName, remark: bookingspa.remark, date: bookingspa.date,\r\n        time: bookingspa.time \r\n      });\r\n  }\r\n\r\n  //delete spa\r\n  deleteBookingSpa(id: string): Promise<void> \r\n  {\r\n    return this.catSpaBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //--------------------------------------CAT VACCINE & NEUTER BOOKING---------------------------------------------\r\n  //getting all catVaccine\r\n  getVaccBookings(): Observable<BookingVacc[]> \r\n  {\r\n    return this.vaccBooking;\r\n  }\r\n\r\n  //getting single cat vaccine\r\n  getVaccBooking(id: string): Observable<BookingVacc> \r\n  {\r\n    return this.catVaccBookingCollection.doc<BookingVacc>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(vaccine => {\r\n         vaccine.id = id;\r\n          return vaccine;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new vaccine\r\n  submitBookingVacc(bookingvacc: BookingVacc): Promise<DocumentReference> \r\n  {\r\n    return this.catVaccBookingCollection.add(bookingvacc);\r\n  }\r\n\r\n  //update vaccine details\r\n  updateBookingVacc(bookingvacc: BookingVacc): Promise<void> \r\n  {\r\n    return this.catVaccBookingCollection.doc(bookingvacc.id).update(\r\n      { customerName: bookingvacc.customerName, contactNumber: bookingvacc.contactNumber,\r\n        catName: bookingvacc.catName, remark:bookingvacc.remark, date: bookingvacc.date,\r\n        time: bookingvacc.time  });\r\n  }\r\n\r\n  //delete vaccine\r\n  deleteBookingVacc(id: string): Promise<void> \r\n  {\r\n    return this.catVaccBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------CAT GRAB BOOKING-----------------------------------------------\r\n  //getting all catGrab\r\n  getGrabBookings(): Observable<BookingGrab[]> \r\n  {\r\n    return this.grabBooking;\r\n  }\r\n\r\n  //getting single cat grab\r\n  getGrabBooking(id: string): Observable<BookingGrab> \r\n  {\r\n    return this.catGrabBookingCollection.doc<BookingGrab>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(grab => {\r\n         grab.id = id;\r\n          return grab;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new grab\r\n  submitBookingGrab(bookinggrab: BookingGrab): Promise<DocumentReference> \r\n  {\r\n    return this.catGrabBookingCollection.add(bookinggrab);\r\n  }\r\n\r\n  //update grab details\r\n  updateBookingGrab(bookinggrab: BookingGrab): Promise<void> \r\n  {\r\n    return this.catGrabBookingCollection.doc(bookinggrab.id).update(\r\n    { customerName: bookinggrab.customerName, contactNumber: bookinggrab.contactNumber,\r\n      catName: bookinggrab.catName, remark:bookinggrab.remark, date:bookinggrab.date,\r\n      time: bookinggrab.time });\r\n  }\r\n\r\n  //delete grab\r\n  deleteBookingGrab(id: string): Promise<void> \r\n  {\r\n    return this.catGrabBookingCollection.doc(id).delete();\r\n  }\r\n\r\n  //-----------------------------------------PURCHASED ITEM-----------------------------------------------\r\n  //getting all item\r\n  getPurchasedItems(): Observable<PurchasedItem[]> \r\n  {\r\n    return this.purchasedItem;\r\n  }\r\n\r\n  //getting single item\r\n  getPurchasedItem(id: string): Observable<PurchasedItem> \r\n  {\r\n    return this.purchasedItemCollection.doc<PurchasedItem>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(item => {\r\n         item.id = id;\r\n          return item;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new item\r\n  submitPurchasedItem (item: PurchasedItem): Promise<DocumentReference> \r\n  {\r\n    return this.purchasedItemCollection.add(item);\r\n  }\r\n\r\n  // //update grab details\r\n  // updateBookingGrab(bookinggrab: BookingGrab): Promise<void> \r\n  // {\r\n  //   return this.catGrabBookingCollection.doc(bookinggrab.id).update(\r\n  //   { customerName: bookinggrab.customerName, contactNumber: bookinggrab.contactNumber,\r\n  //     catName: bookinggrab.catName, remark:bookinggrab.remark, date:bookinggrab.date,\r\n  //     time: bookinggrab.time });\r\n  // }\r\n\r\n  // //delete grab\r\n  // deleteBookingGrab(id: string): Promise<void> \r\n  // {\r\n  //   return this.catGrabBookingCollection.doc(id).delete();\r\n  // }\r\n\r\n  //-----------------------------------------DASHBOARD CONTENT-----------------------------------------------\r\n  //getting all item\r\n  getContents(): Observable<Content[]> \r\n  {\r\n    return this.contentItem;\r\n  }\r\n\r\n  //getting single item\r\n  getContent(id: string): Observable<Content> \r\n  {\r\n    return this.contentCollection.doc<Content>(id).valueChanges().pipe(\r\n        take(1),\r\n        map(content => {\r\n         content.id = id;\r\n          return content;\r\n        })\r\n    );\r\n  }\r\n  \r\n  //create new item\r\n  addContent (content: Content): Promise<DocumentReference> \r\n  {\r\n    return this.contentCollection.add(content);\r\n  }\r\n\r\n\r\n  //update content details\r\n  updateContent(content: Content): Promise<void> \r\n  {\r\n    return this.contentCollection.doc(content.id).update(content);\r\n  }\r\n\r\n  //delete hotel\r\n  deleteContent(id: string): Promise<void> \r\n  {\r\n    return this.contentCollection.doc(id).delete();\r\n  }\r\n\r\n}"],"sourceRoot":"webpack:///","file":"default~add-contact-add-contact-module~add-content-add-content-module~add-grab-add-grab-module~add-h~a513e83c-es5.js"}